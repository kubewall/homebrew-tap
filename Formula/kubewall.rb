# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Kubewall < Formula
  desc "kubewall is a single binary to manage multiple clusters."
  homepage "https://github.com/kubewall/kubewall"
  version "0.0.11"
  license "Apache License 2.0"

  on_macos do
    url "https://github.com/kubewall/kubewall/releases/download/v0.0.11/kubewall_Darwin_all.tar.gz"
    sha256 "1aa5db4f6d6f97cb981d20f8907e610f564b7ccf684da0ff5c2d1e749d01ad3c"

    def install
      bin.install "kubewall"
    end
  end

  on_linux do
    if Hardware::CPU.intel? and Hardware::CPU.is_64_bit?
      url "https://github.com/kubewall/kubewall/releases/download/v0.0.11/kubewall_Linux_x86_64.tar.gz"
      sha256 "52c6de623aad473ec82e6fe94fda5bf4501c85f84713f4f8a1461e38fcb0e6d3"
      def install
        bin.install "kubewall"
      end
    end
    if Hardware::CPU.arm? and Hardware::CPU.is_64_bit?
      url "https://github.com/kubewall/kubewall/releases/download/v0.0.11/kubewall_Linux_arm64.tar.gz"
      sha256 "f2d954f8f998394c09de98ee9e3de85a5b480b129a00f9496a8dffcc5548ab35"
      def install
        bin.install "kubewall"
      end
    end
  end

  test do
    system "#{bin}/kubewall -v"
  end

  def caveats
    <<~EOS
      You can run kubewall directly:
        kubewall

      Or optionally run it as a background service:
        brew services start kubewall

      To manage the service:
        brew services stop kubewall
        brew services restart kubewall

      Service logs are available at:
        #{var}/log/kubewall.log
    EOS
  end

  service do
    run [opt_bin/"kubewall","--no-open-browser"]
    keep_alive true
    log_path var/"log/kubewall.log"
    error_log_path var/"log/kubewall.log"
  end
end
